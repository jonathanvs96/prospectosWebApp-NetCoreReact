{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\OneDrive\\\\Documentos\\\\Documentos Escolares\\\\Trabajo\\\\Proyectos\\\\cms\\\\src\\\\pages\\\\prospectos\\\\ModalContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { rutaAPI } from \"../../config/Config\";\nimport ProspectoModal from \"./presentation/ProspectoModal\";\nimport Swal from \"sweetalert2\";\nimport $ from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Modalcontainer({\n  prospecto\n}) {\n  _s();\n\n  const [data, setData] = useState({});\n  const [error, setError] = useState(null);\n  const [observaCount, setObservaCount] = useState(0);\n  useEffect(() => {\n    const fetchResource = async () => {\n      try {\n        let res = await fetch(`${rutaAPI}/mostrar-prospecto/${prospecto}`);\n        let data = await res.json();\n        setData(data.data[0]);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    fetchResource();\n  }, [prospecto]);\n\n  const handleSubmit = e => {\n    Swal.fire({\n      title: \"¿Actualizar Prospecto?\",\n      text: \"Estas Seguro?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirmar\"\n    }).then(async result => {\n      if (result.value) {\n        let config = {\n          method: \"PUT\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(data)\n        };\n        let res = await fetch(`${rutaAPI}/edit-prospecto/${data._id}`, config);\n        let json = await res.json();\n        console.log(json);\n\n        if (json.status == 200) {\n          Swal.fire({\n            icon: \"success\",\n            title: \"Actualizado con Exito\",\n            text: json.mensaje,\n            showConfirmButton: true,\n            confirmButtonText: \"Aceptar\",\n            confirmButtonColor: \"#3085d6\"\n          }).then(result => {\n            if (result.value) {\n              window.location.reload(false);\n            }\n          });\n        } else {\n          Swal.fire({\n            icon: \"error\",\n            title: json.status,\n            text: json.mensaje,\n            showConfirmButton: true,\n            confirmButtonText: \"Cerrar\",\n            confirmButtonColor: \"#d33\"\n          });\n        }\n      }\n    });\n  };\n\n  const handleChange = e => {\n    setData({ ...data,\n      [e.target.name]: e.target.value\n    });\n    let estado = e.target.value;\n\n    if (e.target.name == \"Prospect_Status\" && estado == \"Rechazado\" && observaCount < 1) {\n      setObservaCount(observaCount + 1);\n      $(\"#observaciones\").fadeIn();\n    } else {\n      if (e.target.name == \"Prospect_Status\" && estado == \"Autorizado\") {\n        $(\"#observaciones\").fadeOut();\n        setObservaCount(0);\n      }\n    }\n  };\n\n  const handleOnClick = () => {\n    $(\"#observaciones\").fadeOut();\n    setObservaCount(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProspectoModal, {\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    onClick: handleOnClick,\n    ...data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Modalcontainer, \"1LPDYe1snzP6ggJFp6KRJ7sx3CM=\");\n\n_c = Modalcontainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modalcontainer\");","map":{"version":3,"sources":["C:/Users/jonat/OneDrive/Documentos/Documentos Escolares/Trabajo/Proyectos/cms/src/pages/prospectos/ModalContainer.jsx"],"names":["React","useState","useEffect","rutaAPI","ProspectoModal","Swal","$","Modalcontainer","prospecto","data","setData","error","setError","observaCount","setObservaCount","fetchResource","res","fetch","json","handleSubmit","e","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","config","method","headers","Accept","body","JSON","stringify","_id","console","log","status","mensaje","showConfirmButton","window","location","reload","handleChange","target","name","estado","fadeIn","fadeOut","handleOnClick"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { rutaAPI } from \"../../config/Config\";\r\n\r\nimport ProspectoModal from \"./presentation/ProspectoModal\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport $ from \"jquery\";\r\n\r\nexport default function Modalcontainer({ prospecto }) {\r\n  const [data, setData] = useState({});\r\n  const [error, setError] = useState(null);\r\n  const [observaCount, setObservaCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchResource = async () => {\r\n      try {\r\n        let res = await fetch(`${rutaAPI}/mostrar-prospecto/${prospecto}`);\r\n        let data = await res.json();\r\n\r\n        setData(data.data[0]);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    };\r\n    fetchResource();\r\n  }, [prospecto]);\r\n\r\n  const handleSubmit = (e) => {\r\n    Swal.fire({\r\n      title: \"¿Actualizar Prospecto?\",\r\n      text: \"Estas Seguro?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirmar\",\r\n    }).then(async (result) => {\r\n      if (result.value) {\r\n        let config = {\r\n          method: \"PUT\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(data),\r\n        };\r\n        let res = await fetch(`${rutaAPI}/edit-prospecto/${data._id}`, config);\r\n\r\n        let json = await res.json();\r\n        console.log(json);\r\n\r\n        if (json.status == 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Actualizado con Exito\",\r\n            text: json.mensaje,\r\n            showConfirmButton: true,\r\n            confirmButtonText: \"Aceptar\",\r\n            confirmButtonColor: \"#3085d6\",\r\n          }).then((result) => {\r\n            if (result.value) {\r\n              window.location.reload(false);\r\n            }\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: json.status,\r\n            text: json.mensaje,\r\n            showConfirmButton: true,\r\n            confirmButtonText: \"Cerrar\",\r\n            confirmButtonColor: \"#d33\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  const handleChange = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n\r\n    let estado = e.target.value;\r\n\r\n    if (\r\n      e.target.name == \"Prospect_Status\" &&\r\n      estado == \"Rechazado\" &&\r\n      observaCount < 1\r\n    ) {\r\n      setObservaCount(observaCount + 1);\r\n\r\n      $(\"#observaciones\").fadeIn();\r\n    } else {\r\n      if (e.target.name == \"Prospect_Status\" && estado == \"Autorizado\") {\r\n        $(\"#observaciones\").fadeOut();\r\n        setObservaCount(0);\r\n      }\r\n    }\r\n  };\r\n  const handleOnClick = () => {\r\n    $(\"#observaciones\").fadeOut();\r\n    setObservaCount(0);\r\n  };\r\n\r\n  return (\r\n    <ProspectoModal\r\n      onChange={handleChange}\r\n      onSubmit={handleSubmit}\r\n      onClick={handleOnClick}\r\n      {...data}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}