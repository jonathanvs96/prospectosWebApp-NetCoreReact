{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchResource = async () => {\n      try {\n        let res = await fetch(url);\n        let data = await res.json();\n        setData(data);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    fetchResource();\n  }, [url]);\n  console.log(data);\n  return {\n    data,\n    error\n  };\n};\n\n_s(useFetch, \"nD7edIDRwNLC+/bSdKREAvtAsyY=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/jonat/OneDrive/Documentos/Documentos Escolares/Trabajo/Proyectos/cms/src/hooks/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","error","setError","fetchResource","res","fetch","json","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,aAAa,GAAG,YAAY;AAChC,UAAI;AACF,YAAIC,GAAG,GAAG,MAAMC,KAAK,CAACP,GAAD,CAArB;AACA,YAAIC,IAAI,GAAG,MAAMK,GAAG,CAACE,IAAJ,EAAjB;AAEAN,QAAAA,OAAO,CAACD,IAAD,CAAP;AACD,OALD,CAKE,OAAOE,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,KATD;;AAUAE,IAAAA,aAAa;AACd,GAZQ,EAYN,CAACL,GAAD,CAZM,CAAT;AAcAS,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,SAAO;AAAEA,IAAAA,IAAF;AAAQE,IAAAA;AAAR,GAAP;AACD,CApBD;;GAAMJ,Q;;AAsBN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchResource = async () => {\r\n      try {\r\n        let res = await fetch(url);\r\n        let data = await res.json();\r\n\r\n        setData(data);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    };\r\n    fetchResource();\r\n  }, [url]);\r\n\r\n  console.log(data);\r\n  return { data, error };\r\n};\r\n\r\nexport default useFetch;\r\n"]},"metadata":{},"sourceType":"module"}