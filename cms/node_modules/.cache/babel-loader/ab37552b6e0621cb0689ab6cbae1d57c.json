{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\OneDrive\\\\Documentos\\\\Documentos Escolares\\\\Trabajo\\\\Proyectos\\\\cms\\\\src\\\\pages\\\\prospectos\\\\ModalContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { rutaAPI } from \"../../config/Config\";\nimport ProspectoModal from \"./presentation/ProspectoModal\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport $ from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Modalcontainer({\n  prospecto\n}) {\n  _s();\n\n  const [data, setData] = useState({});\n  const [error, setError] = useState(null);\n  const [observaCount, setObservaCount] = useState(0);\n  const MySwal = withReactContent(Swal);\n  useEffect(() => {\n    const fetchResource = async () => {\n      try {\n        let res = await fetch(`${rutaAPI}/mostrar-prospecto/${prospecto}`);\n        let data = await res.json();\n        setData(data.data[0]);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    fetchResource();\n  }, [prospecto]);\n\n  const handleSubmit = e => {\n    Swal.fire({\n      title: \"¿Actualizar Prospecto?\",\n      text: \"Estas Seguro?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirmar\"\n    }).then(async result => {\n      if (result.value) {\n        let config = {\n          method: \"PUT\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(data)\n        };\n        let res = await fetch(`${rutaAPI}/edit-prospecto/${data._id}`, config);\n        let json = await res.json();\n        console.log(json);\n\n        if (json.status == 200) {\n          Swal.fire({\n            type: \"success\",\n            title: \"Actualizado con Exito\",\n            text: json.mensaje,\n            showConfirmButton: true,\n            confirmButtonText: \"Cerrar\"\n          }).then(result => {\n            if (result.value) {\n              window.location.reload(false);\n            }\n          });\n        } else {\n          Swal.fire({\n            type: \"error\",\n            title: json.status,\n            text: json.mensaje,\n            showConfirmButton: true,\n            confirmButtonText: \"Cerrar\"\n          });\n        }\n      }\n    });\n  };\n\n  const handleChange = e => {\n    setData({ ...data,\n      [e.target.name]: e.target.value\n    });\n    let estado = e.target.value;\n\n    if (e.target.name == \"Prospect_Status\" && estado == \"Rechazado\" && observaCount < 1) {\n      setObservaCount(observaCount + 1);\n      $(\"#observaciones\").fadeIn();\n    } else {\n      if (e.target.name == \"Prospect_Status\" && estado == \"Autorizado\") {\n        $(\"#observaciones\").fadeOut();\n        setObservaCount(0);\n      }\n    }\n  };\n\n  const handleOnClick = () => {\n    $(\"#observaciones\").fadeOut();\n    setObservaCount(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProspectoModal, {\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    onClick: handleOnClick,\n    ...data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Modalcontainer, \"1LPDYe1snzP6ggJFp6KRJ7sx3CM=\");\n\n_c = Modalcontainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modalcontainer\");","map":{"version":3,"sources":["C:/Users/jonat/OneDrive/Documentos/Documentos Escolares/Trabajo/Proyectos/cms/src/pages/prospectos/ModalContainer.jsx"],"names":["React","useState","useEffect","rutaAPI","ProspectoModal","Swal","withReactContent","$","Modalcontainer","prospecto","data","setData","error","setError","observaCount","setObservaCount","MySwal","fetchResource","res","fetch","json","handleSubmit","e","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","config","method","headers","Accept","body","JSON","stringify","_id","console","log","status","type","mensaje","showConfirmButton","window","location","reload","handleChange","target","name","estado","fadeIn","fadeOut","handleOnClick"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { rutaAPI } from \"../../config/Config\";\r\n\r\nimport ProspectoModal from \"./presentation/ProspectoModal\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nimport $ from \"jquery\";\r\n\r\nexport default function Modalcontainer({ prospecto }) {\r\n  const [data, setData] = useState({});\r\n  const [error, setError] = useState(null);\r\n  const [observaCount, setObservaCount] = useState(0);\r\n  const MySwal = withReactContent(Swal);\r\n\r\n  useEffect(() => {\r\n    const fetchResource = async () => {\r\n      try {\r\n        let res = await fetch(`${rutaAPI}/mostrar-prospecto/${prospecto}`);\r\n        let data = await res.json();\r\n\r\n        setData(data.data[0]);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    };\r\n    fetchResource();\r\n  }, [prospecto]);\r\n\r\n  const handleSubmit = (e) => {\r\n    Swal.fire({\r\n      title: \"¿Actualizar Prospecto?\",\r\n      text: \"Estas Seguro?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirmar\",\r\n    }).then(async (result) => {\r\n      if (result.value) {\r\n        let config = {\r\n          method: \"PUT\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(data),\r\n        };\r\n        let res = await fetch(`${rutaAPI}/edit-prospecto/${data._id}`, config);\r\n\r\n        let json = await res.json();\r\n        console.log(json);\r\n\r\n        if (json.status == 200) {\r\n          Swal.fire({\r\n            type: \"success\",\r\n            title: \"Actualizado con Exito\",\r\n            text: json.mensaje,\r\n            showConfirmButton: true,\r\n            confirmButtonText: \"Cerrar\",\r\n          }).then((result) => {\r\n            if (result.value) {\r\n              window.location.reload(false);\r\n            }\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            type: \"error\",\r\n            title: json.status,\r\n            text: json.mensaje,\r\n            showConfirmButton: true,\r\n            confirmButtonText: \"Cerrar\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  const handleChange = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n\r\n    let estado = e.target.value;\r\n\r\n    if (\r\n      e.target.name == \"Prospect_Status\" &&\r\n      estado == \"Rechazado\" &&\r\n      observaCount < 1\r\n    ) {\r\n      setObservaCount(observaCount + 1);\r\n\r\n      $(\"#observaciones\").fadeIn();\r\n    } else {\r\n      if (e.target.name == \"Prospect_Status\" && estado == \"Autorizado\") {\r\n        $(\"#observaciones\").fadeOut();\r\n        setObservaCount(0);\r\n      }\r\n    }\r\n  };\r\n  const handleOnClick = () => {\r\n    $(\"#observaciones\").fadeOut();\r\n    setObservaCount(0);\r\n  };\r\n\r\n  return (\r\n    <ProspectoModal\r\n      onChange={handleChange}\r\n      onSubmit={handleSubmit}\r\n      onClick={handleOnClick}\r\n      {...data}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}